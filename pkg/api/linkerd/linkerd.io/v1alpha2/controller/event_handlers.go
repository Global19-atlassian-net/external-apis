// Code generated by skv2. DO NOT EDIT.

//go:generate mockgen -source ./event_handlers.go -destination mocks/event_handlers.go

// Definitions for the Kubernetes Controllers
package controller

import (
	"context"

	linkerd_io_v1alpha2 "github.com/linkerd/linkerd2/controller/gen/apis/serviceprofile/v1alpha2"

	"github.com/pkg/errors"
	"github.com/solo-io/skv2/pkg/events"
	"k8s.io/apimachinery/pkg/runtime"
	"sigs.k8s.io/controller-runtime/pkg/manager"
	"sigs.k8s.io/controller-runtime/pkg/predicate"
)

// Handle events for the ServiceProfile Resource
// DEPRECATED: Prefer reconciler pattern.
type ServiceProfileEventHandler interface {
	CreateServiceProfile(obj *linkerd_io_v1alpha2.ServiceProfile) error
	UpdateServiceProfile(old, new *linkerd_io_v1alpha2.ServiceProfile) error
	DeleteServiceProfile(obj *linkerd_io_v1alpha2.ServiceProfile) error
	GenericServiceProfile(obj *linkerd_io_v1alpha2.ServiceProfile) error
}

type ServiceProfileEventHandlerFuncs struct {
	OnCreate  func(obj *linkerd_io_v1alpha2.ServiceProfile) error
	OnUpdate  func(old, new *linkerd_io_v1alpha2.ServiceProfile) error
	OnDelete  func(obj *linkerd_io_v1alpha2.ServiceProfile) error
	OnGeneric func(obj *linkerd_io_v1alpha2.ServiceProfile) error
}

func (f *ServiceProfileEventHandlerFuncs) CreateServiceProfile(obj *linkerd_io_v1alpha2.ServiceProfile) error {
	if f.OnCreate == nil {
		return nil
	}
	return f.OnCreate(obj)
}

func (f *ServiceProfileEventHandlerFuncs) DeleteServiceProfile(obj *linkerd_io_v1alpha2.ServiceProfile) error {
	if f.OnDelete == nil {
		return nil
	}
	return f.OnDelete(obj)
}

func (f *ServiceProfileEventHandlerFuncs) UpdateServiceProfile(objOld, objNew *linkerd_io_v1alpha2.ServiceProfile) error {
	if f.OnUpdate == nil {
		return nil
	}
	return f.OnUpdate(objOld, objNew)
}

func (f *ServiceProfileEventHandlerFuncs) GenericServiceProfile(obj *linkerd_io_v1alpha2.ServiceProfile) error {
	if f.OnGeneric == nil {
		return nil
	}
	return f.OnGeneric(obj)
}

type ServiceProfileEventWatcher interface {
	AddEventHandler(ctx context.Context, h ServiceProfileEventHandler, predicates ...predicate.Predicate) error
}

type serviceProfileEventWatcher struct {
	watcher events.EventWatcher
}

func NewServiceProfileEventWatcher(name string, mgr manager.Manager) ServiceProfileEventWatcher {
	return &serviceProfileEventWatcher{
		watcher: events.NewWatcher(name, mgr, &linkerd_io_v1alpha2.ServiceProfile{}),
	}
}

func (c *serviceProfileEventWatcher) AddEventHandler(ctx context.Context, h ServiceProfileEventHandler, predicates ...predicate.Predicate) error {
	handler := genericServiceProfileHandler{handler: h}
	if err := c.watcher.Watch(ctx, handler, predicates...); err != nil {
		return err
	}
	return nil
}

// genericServiceProfileHandler implements a generic events.EventHandler
type genericServiceProfileHandler struct {
	handler ServiceProfileEventHandler
}

func (h genericServiceProfileHandler) Create(object runtime.Object) error {
	obj, ok := object.(*linkerd_io_v1alpha2.ServiceProfile)
	if !ok {
		return errors.Errorf("internal error: ServiceProfile handler received event for %T", object)
	}
	return h.handler.CreateServiceProfile(obj)
}

func (h genericServiceProfileHandler) Delete(object runtime.Object) error {
	obj, ok := object.(*linkerd_io_v1alpha2.ServiceProfile)
	if !ok {
		return errors.Errorf("internal error: ServiceProfile handler received event for %T", object)
	}
	return h.handler.DeleteServiceProfile(obj)
}

func (h genericServiceProfileHandler) Update(old, new runtime.Object) error {
	objOld, ok := old.(*linkerd_io_v1alpha2.ServiceProfile)
	if !ok {
		return errors.Errorf("internal error: ServiceProfile handler received event for %T", old)
	}
	objNew, ok := new.(*linkerd_io_v1alpha2.ServiceProfile)
	if !ok {
		return errors.Errorf("internal error: ServiceProfile handler received event for %T", new)
	}
	return h.handler.UpdateServiceProfile(objOld, objNew)
}

func (h genericServiceProfileHandler) Generic(object runtime.Object) error {
	obj, ok := object.(*linkerd_io_v1alpha2.ServiceProfile)
	if !ok {
		return errors.Errorf("internal error: ServiceProfile handler received event for %T", object)
	}
	return h.handler.GenericServiceProfile(obj)
}
