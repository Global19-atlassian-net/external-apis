// Code generated by skv2. DO NOT EDIT.

package v1

import (
	apps_v1 "github.com/solo-io/external-apis/pkg/api/k8s/apps/v1"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for Deployment Client from Client
func DeploymentClientProvider(client client.Client) apps_v1.DeploymentClient {
	return apps_v1.NewDeploymentClient(client)
}

type DeploymentClientFactory func(client client.Client) apps_v1.DeploymentClient

func DeploymentClientFactoryProvider() DeploymentClientFactory {
	return DeploymentClientProvider
}

type DeploymentClientFromConfigFactory func(cfg *rest.Config) (apps_v1.DeploymentClient, error)

func DeploymentClientFromConfigFactoryProvider() DeploymentClientFromConfigFactory {
	return func(cfg *rest.Config) (apps_v1.DeploymentClient, error) {
		clients, err := apps_v1.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.Deployments(), nil
	}
}

// Provider for ReplicaSet Client from Client
func ReplicaSetClientProvider(client client.Client) apps_v1.ReplicaSetClient {
	return apps_v1.NewReplicaSetClient(client)
}

type ReplicaSetClientFactory func(client client.Client) apps_v1.ReplicaSetClient

func ReplicaSetClientFactoryProvider() ReplicaSetClientFactory {
	return ReplicaSetClientProvider
}

type ReplicaSetClientFromConfigFactory func(cfg *rest.Config) (apps_v1.ReplicaSetClient, error)

func ReplicaSetClientFromConfigFactoryProvider() ReplicaSetClientFromConfigFactory {
	return func(cfg *rest.Config) (apps_v1.ReplicaSetClient, error) {
		clients, err := apps_v1.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.ReplicaSets(), nil
	}
}

// Provider for DaemonSet Client from Client
func DaemonSetClientProvider(client client.Client) apps_v1.DaemonSetClient {
	return apps_v1.NewDaemonSetClient(client)
}

type DaemonSetClientFactory func(client client.Client) apps_v1.DaemonSetClient

func DaemonSetClientFactoryProvider() DaemonSetClientFactory {
	return DaemonSetClientProvider
}

type DaemonSetClientFromConfigFactory func(cfg *rest.Config) (apps_v1.DaemonSetClient, error)

func DaemonSetClientFromConfigFactoryProvider() DaemonSetClientFromConfigFactory {
	return func(cfg *rest.Config) (apps_v1.DaemonSetClient, error) {
		clients, err := apps_v1.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.DaemonSets(), nil
	}
}
